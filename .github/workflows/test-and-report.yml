name: "CI"

on:
  push:
    branches:
      - "**"
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
        with:
          version: "0.6.3"
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Install dev tools
        shell: bash
        run: .github/workflows/install_dev_tools.bash

      - name: Install Python, venv and dependencies
        run: uv sync --all-extras --frozen --link-mode=copy

      - name: Release version check
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          TOML_VERSION=$(uv run python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")
          if [ "$TAG_VERSION" != "$TOML_VERSION" ]; then
            echo "Release version mismatch: Tag $TAG_VERSION != pyproject.toml $TOML_VERSION"
            exit 1
          fi

      - name: Print development version info
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
          TOML_VERSION=$(uv run python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "Development build - Current version in pyproject.toml: $TOML_VERSION"

      - name: Create .env file
        uses: SpicyPizza/create-envfile@ace6d4f5d7802b600276c23ca417e669f1a06f6f # v2.0.3
        with:
          envkey_STARBRIDGE_ATLASSIAN_URL: "https://your-domain.atlassian.net"
          envkey_STARBRIDGE_ATLASSIAN_EMAIL_ADDRESS: "you@your-domain.com"
          envkey_STARBRIDGE_ATLASSIAN_API_TOKEN: "YOUR_API_TOKEN"
          envkey_STARBRIDGE_SEARCH_BRAVE_SEARCH_API_KEY: "MOCK"
          envkey_STARBRIDGE_LOGFIRE_TOKEN: "${{ secrets.STARBRIDGE_LOGFIRE_TOKEN }}"
          envkey_STARBRIDGE_LOGFIRE_INSTRUMENT_MCP_ENABLED: 1
          envkey_STARBRIDGE_LOGFIRE_ENVIRONMENT: "github_action_test"
          fail_on_empty: true

      - name: Validate installation
        run: |
            OUTPUT=$(uv run --no-dev starbridge --help)
            if [[ "$OUTPUT" != *"built with love in Berlin"* ]]; then
            echo "Output does not contain 'built with love in Berlin'"
            exit 1
            fi

      - name: Smoke tests
        run: uv run --no-dev starbridge --help

      - name: Lint
        run: make lint

      - name: Audit
        run: make audit
      
      - name: Test
        run: make test

      - name: Upload test results
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        if: ${{ always() && (env.GITHUB_WORKFLOW_RUNTIME != 'ACT') }}
        with:
          name: test-results
          path: |
            reports/mypy_junit.xml
            reports/sbom.json
            reports/sbom.spdx
            reports/licenses.csv
            reports/licenses.json
            reports/licenses_grouped.json
            reports/vulnerabilities.json
            reports/junit.xml
            reports/coverage.xml
            reports/coverage_html
          retention-days: 30

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d # v5.4.2
        if: ${{ !cancelled() && (env.GITHUB_WORKFLOW_RUNTIME != 'ACT') }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: helmut-hoffer-von-ankershoffen/starbridge

      - name: Upload test results to Codecov
        if: ${{ !cancelled() && (env.GITHUB_WORKFLOW_RUNTIME != 'ACT') }}
        uses: codecov/test-results-action@f2dba722c67b86c6caa034178c6e4d35335f6706 # v1.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: SonarQube Scan
        if: ${{ !cancelled() && (env.GITHUB_WORKFLOW_RUNTIME != 'ACT') }}
        uses: SonarSource/sonarqube-scan-action@0303d6b62e310685c0e34d0b9cde218036885c4d # v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
